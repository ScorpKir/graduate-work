"""
    Хранилище дифференциальных уравнений
    
    Автор: Кирилл Петряшев
"""

import numpy as np


# В сигнатуре функции задан необязательный параметр t
# Это сделано для совместимости функции задающей наше уравнение с
# функцией построения фазово траектории методом Рунге-Кутты.
#
# В связи с этим временно отключим предупреждение о необязательном параметре.
#
# pylint: disable=unused-argument
def equation(x0: np.ndarray, t: np.ndarray, **kwargs) -> np.ndarray:
    """
        Функция задает дифференциальное уравнение

        x'' - mu * x' + x + a1 * x^2 + a2 * x * x' + a3 * x'^2 = 0

        В виде системы

        x' = y
        y' = mu * y - x - a1 * x^2 - a2 * x * y + a3 * y^2

        :param x0: Массив начальных условий x(0) и x'(0)
        :param t: Массив значений t
        :param args: Значения дифференциального уравнения

        :returns: Значения x' и x'' при заданных начальных условиях
    """
    x, y = x0

    mu = kwargs.get('mu', 0.0)
    a1 = kwargs.get('a1', 0.0)
    a2 = kwargs.get('a2', 0.0)
    a3 = kwargs.get('a3', 0.0)

    return np.array([
        y,
        mu * y - x - a1 * x ** 2 - a2 * x * y - a3 * y ** 2
    ])
# pylint: enable=unused-argument
